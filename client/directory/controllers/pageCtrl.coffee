angular.module('food-coop').controller 'pageCtrl', ($scope, $reactive, $stateParams, uiGmapGoogleMapApi, $mdToast) ->
  $reactive(this).attach($scope)
  vm = this;

  vm.helpers
    producer: ->
      Meteor.users.findOne $stateParams.producerId
    products: ->
      Products.find
        producer: vm.producer._id
        published: true
      ,
        sort: name:1
        limit: 4
    isOwner: ->
      if Meteor.userId()? and Meteor.userId() == $stateParams.producerId
        return yes
      else
        return no
    lovesProducer: ->
      if Meteor.user()
        list = Meteor.user().profile.lovedProducers or []
        if vm.producer._id in list
          return true
        else
          return false

  if Meteor.user()
    user = Meteor.user()

  vm.toggleLove = ->
    unless Meteor.userId()?
      $mdToast.show $mdToast.simple().content("Please login to endorse this producer").position('bottom left').hideDelay(4000)
      return

    unless vm.producer.profile.loveCount?
      Meteor.users.update vm.producer._id, $set: 'profile.loveCount' : 0
    list = Meteor.user().profile.lovedProducers or []
    if vm.producer._id in list
      Meteor.users.update vm.producer._id, $inc: 'profile.loveCount' : -1
      Meteor.users.update Meteor.userId(), $pull: 'profile.lovedProducers': vm.producer._id

      $mdToast.show $mdToast.simple().content("Your endorsement has been removed").position('bottom left').hideDelay(4000)
    else
      Meteor.users.update vm.producer._id, $inc: 'profile.loveCount' : 1
      Meteor.users.update Meteor.userId(), $push: 'profile.lovedProducers': vm.producer._id

      $mdToast.show $mdToast.simple().content("Clap clap! Thanks for your endorsement!").position('bottom left').hideDelay(4000)

  vm.mapSettings =
    center: {latitude:-35.7251117, longitude: 174.323708}
    zoom: 10
    options: scrollwheel: false
    events: tilesloaded: (map) ->
      uiGmapGoogleMapApi.then (maps) ->
        service = new maps.places.PlacesService(map)
        service.getDetails
          placeId: vm.producer.profile.deliveryAddress.place_id
        , (result, status) ->
          $scope.$apply ->

            vm.mapSettings.center =
              latitude: result.geometry.location.lat()
              longitude: result.geometry.location.lng()

            vm.markerSettings =
              id: $stateParams.producerId
              coords:
                latitude: result.geometry.location.lat()
                longitude: result.geometry.location.lng()
              options: {}
            return
          return
        return


  vm.markup = Meteor.settings.public.markup/100 + 1;


  return vm;

# ---
# generated by js2coffee 2.1.0
