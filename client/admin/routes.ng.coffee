isAdmin = ($q) ->
  $q (resolve, reject) ->
    role = Roles.userIsInRole Meteor.userId(), 'admin'
    if role
      resolve role
    else
      reject 'FORBIDDEN'
    return

angular.module('food-coop').config ($stateProvider) ->
  $stateProvider.state('admin',
    url: '/dashboard'
    templateUrl: 'client/admin/views/admin.ng.html'
    controllerAs: 'rt'
    controller: 'AdminCtrl'
    resolve:
      'admin': ($q) ->
        isAdmin($q)
  ).state('admin.products',
    url: '/products'
    templateUrl: 'client/admin/views/products.ng.html'
    controller: 'ProductsAdminCtrl'
    controllerAs: 'ctrl'
  ).state('admin.users',
    url: '/users'
    templateUrl: 'client/admin/views/users.ng.html'
    controller: 'UsersAdminCtrl'
    resolve: 'admin': ($q) ->
        isAdmin($q)
  ).state('admin.createUser',
    url: '/user/new'
    templateUrl: 'client/admin/views/create-user.ng.html'
    controller: 'CreateUserAdminCtrl'
    resolve: 'admin': ($q) ->
        isAdmin($q)
  ).state('admin.user',
    url: '/user/:userId'
    templateUrl: 'client/admin/views/user.ng.html'
    controller: 'UserAdminCtrl'
    resolve: 'admin': ($q) ->
        isAdmin($q)
  ).state('admin.userOrders',
    url: '/user/:userId/orders'
    templateUrl: 'client/admin/views/user.ng.html'
    controller: 'UserOrdersAdminCtrl'
    controllerAs: 'vm'
    resolve: 'admin': ($q) ->
        isAdmin($q)
  ).state('admin.orders',
    url: '/orders'
    templateUrl: 'client/admin/views/orders.ng.html'
    controller: 'OrdersAdminCtrl'
    controllerAs: 'orders'
    resolve: 'admin': ($q) ->
        isAdmin($q)
  ).state 'admin.order',
    url: '/order/:orderId'
    templateUrl: 'client/admin/views/order.ng.html'
    controller: 'OrderAdminCtrl'
    controllerAs: 'vm'
    resolve:
      'admin': ($q) ->
        isAdmin($q)
  return

# ---
# generated by js2coffee 2.1.0
